type Query {
  forms: [Form!]!
  form(id: Int!): Form
}

type Form {
  id: Int!
  title: String!
  questions: [Question!]!
  submissions: [FormSubmission!]!
  dateCreated: String!
}
interface Question {
  title: String!
  number: Int!
}

type ChoisesQuestion implements Question {
  title: String!
  variants: [Variant!]
  type: ChoiseType!
  number: Int!
}

type Variant {
  text: String!
}

type InputQuestion implements Question {
  title: String!
  number: Int!
}

type FormSubmission {
  id: Int!
  answers: [Answer!]!
  date: String!
}

interface Answer {
  id: Int!
  type: AnswerType!
}

type InputAnswer implements Answer {
  id: Int!
  type: AnswerType!
  userInput: String
}

type ChoiseAnswer implements Answer {
  id: Int!
  type: AnswerType!
  userChoise: Int!
}

enum ChoiseType {
  SELECT
  CHECK
  CHOOSE
}

enum AnswerType {
  INPUT
  CHOISE
}
